// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Register(load=load0, in=in, out=out0);
Register(load=load1, in=in, out=out1);
Register(load=load2, in=in, out=out2);
Register(load=load3, in=in, out=out3);
Register(load=load4, in=in, out=out4);
Register(load=load5, in=in, out=out5);
Register(load=load6, in=in, out=out6);
Register(load=load7, in=in, out=out7);

    DMux8Way(sel=address, in=load, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
    Mux8Way16(sel=address, a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, out=out);
}